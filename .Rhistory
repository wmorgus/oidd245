for (row_ind in seq(1:nrow(model_encode_test))) {
est = rf_preds$predictions[row_ind]
actual = model_encode_test[row_ind, "var_1"]
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
vocab_count <- mutate_all(vocab_count, ~replace(., is.na(.), 0))
for (row_ind in seq(1:nrow(model_encode_test))) {
est = rf_preds$predictions[row_ind]
actual = model_encode_test[row_ind, "var_1"]
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
for (row_ind in seq(1:nrow(model_encode_test))) {
est = rf_preds$predictions[row_ind]
actual = model_encode_test[row_ind, "var_1"]
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
for (row_ind in seq(1:nrow(model_encode_test))) {
est = as.double(rf_preds$predictions[row_ind])
actual = as.double(model_encode_test[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total bias differential", "number of tweets from actual")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
print(preds[row_ind])
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
print(preds[row_ind])
print(test_df[row_ind, "var_1"])
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
print(preds[row_ind])
print(as.double(test_df[row_ind, "var_1"]))
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
print(preds[row_ind])
print(as.double(test_df[row_ind, "var_1"]))
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 1] = bias_accuracy_df[actual, 1] + bias_diff
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[actual, 1] = bias_accuracy_df[actual, 1] + bias_diff
bias_accuracy_df[actual, 2] = bias_accuracy_df[actual, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_accuracy_df[1, actual] = bias_accuracy_df[1, actual] + bias_diff
bias_accuracy_df[2, actual] = bias_accuracy_df[2, actual] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_val = (bias * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = actual - est
bias_val = (actual * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
print(bias_diff)
bias_val = (actual * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
print(bias_diff)
bias_val = (actual * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
print(rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
print(bias_diff)
bias_val = (actual * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
print(rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
print(bias_diff)
bias_val = (actual * 4) + 1
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (is.na(bias_diff)) {
bias_diff = 0
}
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias_category")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
accuracy_df = score_accuracy(model_encode_test, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias_category")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
accuracy_df = score_accuracy(model_encode_test, rf_preds$predictions)
accuracy_df
rf_preds = try_ranger(training_encoded, test_encoded)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias_category")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
accuracy_df = score_accuracy(model_encode_test, rf_preds$predictions)
accuracy_df
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias_category")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
accuracy_df = score_accuracy(training_encoded, rf_preds$predictions)
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias_category")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
accuracy_df = score_accuracy(test_encoded, rf_preds$predictions)
accuracy_df
score_accuracy = function(test_df, preds) {
bias_accuracy_df = data.frame(matrix(ncol = (2), nrow = 5))
bias_accuracy_df <- mutate_all(bias_accuracy_df, ~replace(., is.na(.), 0))
colnames(bias_accuracy_df) <- c("total_bias_differential", "tweets_in_bias_category")
for (row_ind in seq(1:nrow(test_df))) {
est = as.double(preds[row_ind])
actual = as.double(test_df[row_ind, "var_1"])
bias_diff = as.double(actual - est)
bias_val = (actual * 4) + 1
if (!is.na(bias_diff)) {
bias_accuracy_df[bias_val, 1] = bias_accuracy_df[bias_val, 1] + bias_diff
bias_accuracy_df[bias_val, 2] = bias_accuracy_df[bias_val, 2] + 1
}
}
return(bias_accuracy_df)
}
accuracy_df = score_accuracy(test_encoded, rf_preds$predictions)
accuracy_df %>% mutate(average=(total_bias_differential/tweets_in_bias_category))
tab <- table(pr, test_knn_tr$var_1)
train_knn_tr = head(sent_training_encoded, 18000)
install.packages("data.table", repos = "https://Rdatatable.github.io/data.table", type = "source")
library(rtweet)
library(httpuv)
library(stringr)
library(tidyverse)
library(tidytext)
library(tm)
library(ggplot2)
library(reshape2)
library(SnowballC)
library(syuzhet)
library(data.table)
library(class)
library(ranger) #this worked better instead of randomForest
#sum of ascii values for will morgus
set.seed(1141)
setwd('/Users/willmorgus/Desktop/penn/oidd245/bias')
training_encoded = fread("./training_encoded.csv")
test_encoded = fread("./test_encoded.csv")
new_col_names <- c(unlist(str_split(paste(c("",  c(1:length(colnames(training_encoded)))), collapse=" var_"), " ")))
new_col_names <- new_col_names[-1]
colnames(training_encoded) <- new_col_names
colnames(test_encoded) <- new_col_names
train_knn_tr = head(sent_training_encoded, 18000)
sent_training_encoded = fread("./sent_training_encoded.csv")
sent_test_encoded = fread("./sent_test_encoded.csv")
sent_training_encoded = fread("./sent_training_encoded.csv")
sent_test_encoded = fread("./sent_test_encoded.csv")
train_knn_tr = head(sent_training_encoded, 18000)
test_knn_tr = sent_test_encoded[sample(nrow(train_knn_tr), 6000), ]
dim(test_knn_tr)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr, test_knn_tr, train_knn_tr$var_1, k=1)
tab <- table(pr, test_knn_tr$var_1)
tab
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
summary(pr)
tab <- table(pr, test_knn_tr$var_1)
tab
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
train_knn_tr = head(sent_training_encoded, 18000)
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 6000), ]
dim(test_knn_tr)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr, test_knn_tr, train_knn_tr$var_1, k=1)
summary(pr)
tab <- table(pr, test_knn_tr$var_1)
tab
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
train_knn_tr = head(sent_training_encoded, 48000)
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 12000), ]
dim(test_knn_tr)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr, test_knn_tr, train_knn_tr$var_1, k=1)
train_knn_tr = head(sent_training_encoded, 40000)
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 1000), ]
dim(test_knn_tr)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr, test_knn_tr, train_knn_tr$var_1, k=1)
train_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 28800), ]
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 7200), ]
train_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 28800), ]
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 7200), ]
train_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 28800), ]
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 7200), ]
head(train_knn_tr, 10)
pr <- knn(train_knn_tr, test_knn_tr, train_knn_tr$var_1, k=1)
tab <- table(pr, test_knn_tr$var_1)
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr[,1], test_knn_tr[,1], train_knn_tr$var_1, k=1)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr[,-1], test_knn_tr[,-1], train_knn_tr$var_1, k=1)
train_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 28800), ]
test_knn_tr = sent_test_encoded[sample(nrow(sent_test_encoded), 7200), ]
head(train_knn_tr, 10)
pr <- knn(train_knn_tr[,-1], test_knn_tr[,-1], train_knn_tr$var_1, k=1)
head(train_knn_tr, 10)
pr <- knn(train_knn_tr, test_knn_tr, train_knn_tr$var_1, k=1)
tab <- table(pr, test_knn_tr$var_1)
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
